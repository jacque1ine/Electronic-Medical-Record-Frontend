{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VBtn.css\"; // Components\n\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { defineComponent } from \"../../util/index.mjs\";\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n  directives: {\n    Ripple\n  },\n  props: {\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol\n    },\n    flat: Boolean,\n    icon: [Boolean, String],\n    prependIcon: String,\n    appendIcon: String,\n    block: Boolean,\n    stacked: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'button'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'contained'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      positionClasses,\n      positionStyles\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const group = useGroupItem(props, props.symbol, false);\n    const link = useLink(props, attrs);\n    const isDisabled = computed(() => (group == null ? void 0 : group.disabled.value) || props.disabled);\n    const isElevated = computed(() => {\n      return props.variant === 'contained' && !(props.disabled || props.flat || props.border);\n    });\n    useSelectLink(link, group == null ? void 0 : group.select);\n    return () => {\n      var _link$isExactActive, _slots$default;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasColor = !group || group.isSelected.value;\n      return _withDirectives(_createVNode(Tag, {\n        \"type\": Tag === 'a' ? undefined : 'button',\n        \"class\": ['v-btn', group == null ? void 0 : group.selectedClass.value, {\n          'v-btn--active': (_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value,\n          'v-btn--block': props.block,\n          'v-btn--disabled': isDisabled.value,\n          'v-btn--elevated': isElevated.value,\n          'v-btn--flat': props.flat,\n          'v-btn--icon': !!props.icon,\n          'v-btn--stacked': props.stacked\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value, positionStyles.value],\n        \"disabled\": isDisabled.value || undefined,\n        \"href\": link.href.value,\n        \"onClick\": e => {\n          var _link$navigate;\n\n          if (isDisabled.value) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          group == null ? void 0 : group.toggle();\n        }\n      }, {\n        default: () => [genOverlays(true, 'v-btn'), !props.icon && props.prependIcon && _createVNode(VIcon, {\n          \"class\": \"v-btn__icon\",\n          \"icon\": props.prependIcon,\n          \"start\": true\n        }, null), typeof props.icon === 'boolean' ? (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots) : _createVNode(VIcon, {\n          \"class\": \"v-btn__icon\",\n          \"icon\": props.icon,\n          \"size\": props.size\n        }, null), !props.icon && props.appendIcon && _createVNode(VIcon, {\n          \"class\": \"v-btn__icon\",\n          \"icon\": props.appendIcon,\n          \"end\": true\n        }, null)]\n      }), [[_resolveDirective(\"ripple\"), !isDisabled.value && props.ripple, null]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VBtnToggleSymbol","VIcon","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","useSelectLink","Ripple","computed","defineComponent","VBtn","name","directives","props","symbol","type","default","flat","Boolean","icon","String","prependIcon","appendIcon","block","stacked","ripple","tag","variant","setup","attrs","slots","_ref","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","positionClasses","positionStyles","roundedClasses","sizeClasses","group","link","isDisabled","disabled","value","isElevated","border","select","Tag","isLink","hasColor","isSelected","undefined","selectedClass","isExactActive","_link$isExactActive","href","e","navigate","toggle","_slots$default","size"],"sources":["../../../src/components/VBtn/VBtn.tsx"],"sourcesContent":["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { useSelectLink } from '@/composables/selectLink'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: {\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol,\n    },\n    flat: Boolean,\n    icon: [Boolean, String],\n    prependIcon: String,\n    appendIcon: String,\n\n    block: Boolean,\n    stacked: Boolean,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'button' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'contained' && !(props.disabled || props.flat || props.border)\n    })\n\n    useSelectLink(link, group?.select)\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !group || group.isSelected.value\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': link.isExactActive?.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            positionStyles.value,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ (e: MouseEvent) => {\n            if (isDisabled.value) return\n\n            link.navigate?.(e)\n            group?.toggle()\n          } }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && props.prependIcon && (\n            <VIcon\n              class=\"v-btn__icon\"\n              icon={ props.prependIcon }\n              start\n            />\n          ) }\n\n          { typeof props.icon === 'boolean'\n            ? slots.default?.()\n            : (\n              <VIcon\n                class=\"v-btn__icon\"\n                icon={ props.icon }\n                size={ props.size }\n              />\n            )\n          }\n\n          { !props.icon && props.appendIcon && (\n            <VIcon\n              class=\"v-btn__icon\"\n              icon={ props.appendIcon }\n              end\n            />\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n"]},"metadata":{},"sourceType":"module"}