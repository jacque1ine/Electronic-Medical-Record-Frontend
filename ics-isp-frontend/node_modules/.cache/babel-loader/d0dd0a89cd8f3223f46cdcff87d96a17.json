{"ast":null,"code":"// Utilities\nimport { computed, ref } from 'vue';\nimport { getCurrentInstance, toKebabCase } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport function useProxiedModel(props, prop, defaultValue) {\n  let transformIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : v => v;\n  let transformOut = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : v => v;\n  const vm = getCurrentInstance('useProxiedModel');\n  const propIsDefined = computed(() => {\n    var _vm$vnode$props, _vm$vnode$props2;\n\n    return !!(typeof props[prop] !== 'undefined' && (vm != null && (_vm$vnode$props = vm.vnode.props) != null && _vm$vnode$props.hasOwnProperty(prop) || vm != null && (_vm$vnode$props2 = vm.vnode.props) != null && _vm$vnode$props2.hasOwnProperty(toKebabCase(prop))));\n  });\n  const internal = ref(transformIn(props[prop]));\n  return computed({\n    get() {\n      if (propIsDefined.value) return transformIn(props[prop]);else return internal.value;\n    },\n\n    set(newValue) {\n      if ((propIsDefined.value ? transformIn(props[prop]) : internal.value) === newValue) {\n        return;\n      }\n\n      internal.value = newValue;\n      vm == null ? void 0 : vm.emit(`update:${prop}`, transformOut(newValue));\n    }\n\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,KAA9B;SACSC,oBAAoBC,mB,qBAE7B;AAGA;;AACA,OAAO,SAASC,eAAT,CAKLC,KALK,EAMLC,IANK,EAOLC,YAPK,EAUL;EAAA,IAFAC,WAEA,uEAF+CC,CAAD,IAAYA,CAE1D;EAAA,IADAC,YACA,uEAD+CD,CAAD,IAAYA,CAC1D;EACA,MAAME,EAAE,GAAGT,kBAAkB,CAAC,iBAAD,CAA7B;EAEA,MAAMU,aAAa,GAAGZ,QAAQ,CAAC,MAAM;IAAA;;IACnC,OAAO,CAAC,EACN,OAAOK,KAAK,CAACC,IAAD,CAAZ,KAAuB,WAAvB,KACCK,EAAE,QAAFA,yBAAE,CAAEE,KAAJF,CAAUN,KAAV,6BAAiBS,cAAjB,CAAgCR,IAAhC,KAAyCK,EAAzC,QAAyCA,IAAzC,oBAAyCA,EAAE,CAAEE,KAAJF,CAAUN,KAAnD,SAAyCM,qBAAiBG,cAAjB,CAAgCX,WAAW,CAACG,IAAD,CAA3C,CAD1C,CADM,CAAR;EAD4B,EAA9B;EAOA,MAAMS,QAAQ,GAAGd,GAAG,CAACO,WAAW,CAACH,KAAK,CAACC,IAAD,CAAN,CAAZ,CAApB;EAEA,OAAON,QAAQ,CAAQ;IACrBgB,GAAG,GAAI;MACL,IAAIJ,aAAa,CAACK,KAAlB,EAAyB,OAAOT,WAAW,CAACH,KAAK,CAACC,IAAD,CAAN,CAAlB,CAAzB,KACK,OAAOS,QAAQ,CAACE,KAAhB;IAHc;;IAKrBC,GAAG,CAAEC,QAAF,EAAY;MACb,IAAI,CAACP,aAAa,CAACK,KAAdL,GAAsBJ,WAAW,CAACH,KAAK,CAACC,IAAD,CAAN,CAAjCM,GAAiDG,QAAQ,CAACE,KAA3D,MAAsEE,QAA1E,EAAoF;QAClF;MACD;;MACDJ,QAAQ,CAACE,KAATF,GAAiBI,QAAjBJ;MACAJ,EAAE,QAAFA,cAAE,CAAES,IAAJT,CAAU,UAASL,IAAK,EAAxBK,EAA2BD,YAAY,CAACS,QAAD,CAAvCR;IACD;;EAXoB,CAAR,CAAf;AAaD","names":["computed","ref","getCurrentInstance","toKebabCase","useProxiedModel","props","prop","defaultValue","transformIn","v","transformOut","vm","propIsDefined","vnode","hasOwnProperty","internal","get","value","set","newValue","emit"],"sources":["../../src/composables/proxiedModel.ts"],"sourcesContent":["// Utilities\nimport { computed, ref } from 'vue'\nimport { getCurrentInstance, toKebabCase } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\n// Composables\nexport function useProxiedModel<\n  Props extends object & { [key in Prop as `onUpdate:${Prop}`]: ((val: any) => void) | undefined },\n  Prop extends Extract<keyof Props, string>,\n  Inner = Props[Prop],\n> (\n  props: Props,\n  prop: Prop,\n  defaultValue?: Props[Prop],\n  transformIn: (value?: Props[Prop]) => Inner = (v: any) => v,\n  transformOut: (value: Inner) => Props[Prop] = (v: any) => v,\n) {\n  const vm = getCurrentInstance('useProxiedModel')\n\n  const propIsDefined = computed(() => {\n    return !!(\n      typeof props[prop] !== 'undefined' &&\n      (vm?.vnode.props?.hasOwnProperty(prop) || vm?.vnode.props?.hasOwnProperty(toKebabCase(prop)))\n    )\n  })\n\n  const internal = ref(transformIn(props[prop])) as Ref<Inner>\n\n  return computed<Inner>({\n    get () {\n      if (propIsDefined.value) return transformIn(props[prop])\n      else return internal.value\n    },\n    set (newValue) {\n      if ((propIsDefined.value ? transformIn(props[prop]) : internal.value) === newValue) {\n        return\n      }\n      internal.value = newValue\n      vm?.emit(`update:${prop}`, transformOut(newValue))\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"module"}