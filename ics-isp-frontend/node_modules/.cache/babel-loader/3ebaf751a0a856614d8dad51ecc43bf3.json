{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n// Styles\n\nimport \"./VCard.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\";\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardAvatar } from \"./VCardAvatar.mjs\";\nimport { VCardContent } from \"./VCardContent.mjs\";\nimport { VCardHeader } from \"./VCardHeader.mjs\";\nimport { VCardHeaderText } from \"./VCardHeaderText.mjs\";\nimport { VCardImg } from \"./VCardImg.mjs\";\nimport { VCardSubtitle } from \"./VCardSubtitle.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VCardTitle } from \"./VCardTitle.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { defineComponent } from \"../../util/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nexport const VCard = defineComponent({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: {\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    ripple: Boolean,\n    subtitle: String,\n    text: String,\n    title: String,\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({\n      variant: 'contained'\n    })\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      positionClasses,\n      positionStyles\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    return () => {\n      var _slots$image, _slots$media, _slots$headerText, _slots$default;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle);\n      const hasHeaderText = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasHeader = hasHeaderText || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text);\n      const isClickable = !props.disabled && (link.isClickable.value || props.link);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value, positionStyles.value],\n        \"href\": link.href.value,\n        \"onClick\": isClickable && link.navigate\n      }, {\n        default: () => [genOverlays(isClickable, 'v-card'), hasImage && _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, {\n          default: () => [_createVNode(VCardImg, null, {\n            default: () => [slots.image ? (_slots$image = slots.image) == null ? void 0 : _slots$image.call(slots) : _createVNode(VImg, {\n              \"alt\": \"\"\n            }, null)]\n          })]\n        }), (_slots$media = slots.media) == null ? void 0 : _slots$media.call(slots), hasHeader && _createVNode(VCardHeader, null, {\n          default: () => [hasPrepend && _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VAvatar: {\n                density: props.density,\n                icon: props.prependIcon,\n                image: props.prependAvatar\n              }\n            }\n          }, {\n            default: () => [_createVNode(VCardAvatar, null, {\n              default: () => [slots.prepend ? slots.prepend() : _createVNode(VAvatar, null, null)]\n            })]\n          }), hasHeaderText && _createVNode(VCardHeaderText, null, {\n            default: () => [hasTitle && _createVNode(VCardTitle, null, {\n              default: () => [slots.title ? slots.title() : props.title]\n            }), hasSubtitle && _createVNode(VCardSubtitle, null, {\n              default: () => [slots.subtitle ? slots.subtitle() : props.subtitle]\n            }), (_slots$headerText = slots.headerText) == null ? void 0 : _slots$headerText.call(slots)]\n          }), hasAppend && _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VAvatar: {\n                density: props.density,\n                icon: props.appendIcon,\n                image: props.appendAvatar\n              }\n            }\n          }, {\n            default: () => [_createVNode(VCardAvatar, null, {\n              default: () => [slots.append ? slots.append() : _createVNode(VAvatar, null, null)]\n            })]\n          })]\n        }), hasText && _createVNode(VCardText, null, {\n          default: () => [slots.text ? slots.text() : props.text]\n        }), slots.content && _createVNode(VCardContent, null, {\n          default: slots.content\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        })]\n      }), [[_resolveDirective(\"ripple\"), isClickable]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":";AAAA;AAEA;;AACA,qB,CAEA;;SACSA,e;SACAC,Y;SACAC,oB;SACAC,mB;SACAC,oB;SACAC,mB;SACAC,uB;SACAC,gB;SACAC,qB;SACAC,iB;SACAC,kB,oBAET;;SACSC,iBAAiBC,iB;SACjBC,kBAAkBC,kB;SAClBC,oBAAoBC,oB;SACpBC,oBAAoBC,oB;SACpBC,mBAAmBC,mB;SACnBC,kBAAkBC,kB;SAClBC,iBAAiBC,e;SACjBC,oB;SACAC,gBAAgBC,oB;SAChBC,aAAaC,kBAAkBC,kB,iCAExC;;SACSC,c,qCAET;;SACSC,uB;SACAC,yB;AAET,OAAO,MAAMC,KAAK,GAAGF,eAAe,CAAC;EACnCG,IAAI,EAAE,OAD6B;EAGnCC,UAAU,EAAE;IAAEL;EAAF,CAHuB;EAKnCM,KAAK,EAAE;IACLC,YAAY,EAAEC,MADT;IAELC,UAAU,EAAED,MAFP;IAGLE,QAAQ,EAAEC,OAHL;IAILC,IAAI,EAAED,OAJD;IAKLE,KAAK,EAAEF,OALF;IAMLG,KAAK,EAAEN,MANF;IAOLO,IAAI,EAAEJ,OAPD;IAQLK,aAAa,EAAER,MARV;IASLS,WAAW,EAAET,MATR;IAULU,MAAM,EAAEP,OAVH;IAWLQ,QAAQ,EAAEX,MAXL;IAYLY,IAAI,EAAEZ,MAZD;IAaLa,KAAK,EAAEb,MAbF;IAeL,GAAGb,cAAc,EAfZ;IAgBL,GAAGf,eAAe,EAhBb;IAiBL,GAAGE,gBAAgB,EAjBd;IAkBL,GAAGE,kBAAkB,EAlBhB;IAmBL,GAAGE,kBAAkB,EAnBhB;IAoBL,GAAGE,iBAAiB,EApBf;IAqBL,GAAGE,gBAAgB,EArBd;IAsBL,GAAGE,eAAe,EAtBb;IAuBL,GAAGE,YAAY,EAvBV;IAwBL,GAAGI,gBAAgB,CAAC;MAAEwB,OAAO,EAAE;IAAX,CAAD;EAxBd,CAL4B;;EAgCnCC,KAAK,CAAEjB,KAAF,QAA2B;IAAA,IAAlB;MAAEkB,KAAF;MAASC;IAAT,IAAkBC;IAC9B,MAAM;MAAEC;IAAF,IAAmB/B,YAAY,CAACU,KAAD,CAArC;IACA,MAAM;MAAEsB;IAAF,IAAoB/C,SAAS,CAACyB,KAAD,CAAnC;IACA,MAAM;MAAEuB,YAAF;MAAgBC,WAAhB;MAA6BC;IAA7B,IAAgDhC,UAAU,CAACO,KAAD,CAAhE;IACA,MAAM;MAAE0B;IAAF,IAAqBjD,UAAU,CAACuB,KAAD,CAArC;IACA,MAAM;MAAE2B;IAAF,IAAsBhD,YAAY,CAACqB,KAAD,CAAxC;IACA,MAAM;MAAE4B;IAAF,IAAuB/C,YAAY,CAACmB,KAAD,CAAzC;IACA,MAAM;MAAE6B,eAAF;MAAmBC;IAAnB,IAAsC/C,WAAW,CAACiB,KAAD,CAAvD;IACA,MAAM;MAAE+B;IAAF,IAAqB9C,UAAU,CAACe,KAAD,CAArC;IACA,MAAMS,IAAI,GAAGtB,OAAO,CAACa,KAAD,EAAQkB,KAAR,CAApB;IAEA,OAAO,MAAM;MAAA;;MACX,MAAMc,GAAG,GAAIvB,IAAI,CAACwB,MAALxB,CAAYyB,KAAZzB,GAAqB,GAArBA,GAA2BT,KAAK,CAACmC,GAA9C;MACA,MAAMC,QAAQ,GAAG,CAAC,EAAEjB,KAAK,CAACJ,KAANI,IAAenB,KAAK,CAACe,KAAvB,CAAlB;MACA,MAAMsB,WAAW,GAAG,CAAC,EAAElB,KAAK,CAACN,QAANM,IAAkBnB,KAAK,CAACa,QAA1B,CAArB;MACA,MAAMyB,aAAa,GAAGF,QAAQ,IAAIC,WAAlC;MACA,MAAME,SAAS,GAAG,CAAC,EAAEpB,KAAK,CAACqB,MAANrB,IAAgBnB,KAAK,CAACC,YAAtBkB,IAAsCnB,KAAK,CAACG,UAA9C,CAAnB;MACA,MAAMsC,UAAU,GAAG,CAAC,EAAEtB,KAAK,CAACuB,OAANvB,IAAiBnB,KAAK,CAACU,aAAvBS,IAAwCnB,KAAK,CAACW,WAAhD,CAApB;MACA,MAAMgC,QAAQ,GAAG,CAAC,EAAExB,KAAK,CAACX,KAANW,IAAenB,KAAK,CAACQ,KAAvB,CAAlB;MACA,MAAMoC,SAAS,GAAGN,aAAa,IAAIG,UAAjBH,IAA+BC,SAAjD;MACA,MAAMM,OAAO,GAAG,CAAC,EAAE1B,KAAK,CAACL,IAANK,IAAcnB,KAAK,CAACc,IAAtB,CAAjB;MACA,MAAMgC,WAAW,GAAG,CAAC9C,KAAK,CAACI,QAAP,KAAoBK,IAAI,CAACqC,WAALrC,CAAiByB,KAAjBzB,IAA0BT,KAAK,CAACS,IAApD,CAApB;MAEA;QAAA,SAEW,CACL,QADK,EAEL;UACE,oBAAoBT,KAAK,CAACI,QAD5B;UAEE,gBAAgBJ,KAAK,CAACM,IAFxB;UAGE,iBAAiBN,KAAK,CAACO,KAANP,IAAe,EAAEA,KAAK,CAACI,QAANJ,IAAkBA,KAAK,CAACM,IAA1B,CAHlC;UAIE,gBAAgBwC;QAJlB,CAFK,EAQLzB,YAAY,CAACa,KARR,EASLZ,aAAa,CAACY,KATT,EAULX,YAAY,CAACW,KAVR,EAWLR,cAAc,CAACQ,KAXV,EAYLN,gBAAgB,CAACM,KAZZ,EAaLL,eAAe,CAACK,KAbX,EAcLH,cAAc,CAACG,KAdV,EAeLT,cAAc,CAACS,KAfV,CAFX;QAAA,SAmBW,CACLV,WAAW,CAACU,KADP,EAELP,eAAe,CAACO,KAFX,EAGLJ,cAAc,CAACI,KAHV,CAnBX;QAAA,QAwBWzB,IAAI,CAACsC,IAALtC,CAAUyB,KAxBrB;QAAA,WAyBcY,WAAW,IAAIrC,IAAI,CAACuC;MAzBlC;QAAAC,gBA4BM1D,WAAW,CAACuD,WAAD,EAAc,QAAd,CA5BjB,EA8BMH,QAAQ;UAAA,YAEI;YACR/E,IAAI,EAAE;cACJsF,KAAK,EAAE,IADH;cAEJC,GAAG,EAAEnD,KAAK,CAACQ;YAFP;UADE;QAFJ;UAAAyC;YAAAA,gBAUF9B,KAAK,CAACX,KAANW,mBAAcA,KAAK,CAACX,KAApB,qBAAc4C,wBAAdjC;cAAA,OAA2C;YAA3C,QAVE;UAAA;QAAA,EA9Bd,kBA6CMA,KAAK,CAACkC,KA7CZ,qBA6CMC,wBA7CN,EA+CMV,SAAS;UAAAK,gBAELR,UAAU;YAAA,YAEE;cACR9E,OAAO,EAAE;gBACP4F,OAAO,EAAEvD,KAAK,CAACuD,OADR;gBAEPC,IAAI,EAAExD,KAAK,CAACW,WAFL;gBAGPH,KAAK,EAAER,KAAK,CAACU;cAHN;YADD;UAFF;YAAAuC;cAAAA,gBAWJ9B,KAAK,CAACuB,OAANvB,GAAgBA,KAAK,CAACuB,OAANvB,EAAhBA,oCAXI;YAAA;UAAA,EAFL,EAkBLmB,aAAa;YAAAW,gBAETb,QAAQ;cAAAa,gBAEJ9B,KAAK,CAACJ,KAANI,GAAcA,KAAK,CAACJ,KAANI,EAAdA,GAA8BnB,KAAK,CAACe,KAFhC;YAAA,EAFC,EAQTsB,WAAW;cAAAY,gBAEP9B,KAAK,CAACN,QAANM,GAAiBA,KAAK,CAACN,QAANM,EAAjBA,GAAoCnB,KAAK,CAACa,QAFnC;YAAA,EARF,uBAcTM,KAAK,CAACsC,UAdG,qBAcTC,6BAdS;UAAA,EAlBR,EAoCLnB,SAAS;YAAA,YAEG;cACR5E,OAAO,EAAE;gBACP4F,OAAO,EAAEvD,KAAK,CAACuD,OADR;gBAEPC,IAAI,EAAExD,KAAK,CAACG,UAFL;gBAGPK,KAAK,EAAER,KAAK,CAACC;cAHN;YADD;UAFH;YAAAgD;cAAAA,gBAWH9B,KAAK,CAACqB,MAANrB,GAAeA,KAAK,CAACqB,MAANrB,EAAfA,oCAXG;YAAA;UAAA,EApCJ;QAAA,EA/Cf,EAqGM0B,OAAO;UAAAI,gBAEH9B,KAAK,CAACL,IAANK,GAAaA,KAAK,CAACL,IAANK,EAAbA,GAA4BnB,KAAK,CAACc,IAF/B;QAAA,EArGb,EA2GMK,KAAK,CAACwC,OAANxC,qCACuB;UAAE8B,OAAO,EAAE9B,KAAK,CAACwC;QAAjB,CADvB,CA3GN,oBA+GMxC,KAAK,CAAC8B,OA/GZ,qBA+GMW,0BA/GN,EAiHMzC,KAAK,CAAC0C,OAAN1C,qCACuB;UAAE8B,OAAO,EAAE9B,KAAK,CAAC0C;QAAjB,CADvB,CAjHN;MAAA,mCA0Bef,WA1Bf;IAZF;EAmID;;AA9KkC,CAAD,CAA7B","names":["VAvatar","VImg","VCardActions","VCardAvatar","VCardContent","VCardHeader","VCardHeaderText","VCardImg","VCardSubtitle","VCardText","VCardTitle","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","Ripple","defineComponent","VDefaultsProvider","VCard","name","directives","props","appendAvatar","String","appendIcon","disabled","Boolean","flat","hover","image","link","prependAvatar","prependIcon","ripple","subtitle","text","title","variant","setup","attrs","slots","_ref","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","positionClasses","positionStyles","roundedClasses","Tag","isLink","value","tag","hasTitle","hasSubtitle","hasHeaderText","hasAppend","append","hasPrepend","prepend","hasImage","hasHeader","hasText","isClickable","href","navigate","default","cover","src","_slots$image","media","_slots$media","density","icon","headerText","_slots$headerText","content","_slots$default","actions"],"sources":["../../../src/components/VCard/VCard.tsx"],"sourcesContent":["/* eslint-disable complexity */\n\n// Styles\nimport './VCard.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VImg } from '@/components/VImg'\nimport { VCardActions } from './VCardActions'\nimport { VCardAvatar } from './VCardAvatar'\nimport { VCardContent } from './VCardContent'\nimport { VCardHeader } from './VCardHeader'\nimport { VCardHeaderText } from './VCardHeaderText'\nimport { VCardImg } from './VCardImg'\nimport { VCardSubtitle } from './VCardSubtitle'\nimport { VCardText } from './VCardText'\nimport { VCardTitle } from './VCardTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { defineComponent } from '@/util'\nimport { VDefaultsProvider } from '../VDefaultsProvider'\n\nexport const VCard = defineComponent({\n  name: 'VCard',\n\n  directives: { Ripple },\n\n  props: {\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    image: String,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    ripple: Boolean,\n    subtitle: String,\n    text: String,\n    title: String,\n\n    ...makeThemeProps(),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeVariantProps({ variant: 'contained' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const link = useLink(props, attrs)\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = !!(slots.title || props.title)\n      const hasSubtitle = !!(slots.subtitle || props.subtitle)\n      const hasHeaderText = hasTitle || hasSubtitle\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const hasImage = !!(slots.image || props.image)\n      const hasHeader = hasHeaderText || hasPrepend || hasAppend\n      const hasText = !!(slots.text || props.text)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link)\n\n      return (\n        <Tag\n          class={[\n            'v-card',\n            {\n              'v-card--disabled': props.disabled,\n              'v-card--flat': props.flat,\n              'v-card--hover': props.hover && !(props.disabled || props.flat),\n              'v-card--link': isClickable,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            positionStyles.value,\n          ]}\n          href={ link.href.value }\n          onClick={ isClickable && link.navigate }\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable, 'v-card') }\n\n          { hasImage && (\n            <VDefaultsProvider\n              defaults={{\n                VImg: {\n                  cover: true,\n                  src: props.image,\n                },\n              }}\n            >\n              <VCardImg>\n                { slots.image ? slots.image?.() : (<VImg alt=\"\" />) }\n              </VCardImg>\n            </VDefaultsProvider>\n          ) }\n\n          { slots.media?.() }\n\n          { hasHeader && (\n            <VCardHeader>\n              { hasPrepend && (\n                <VDefaultsProvider\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      icon: props.prependIcon,\n                      image: props.prependAvatar,\n                    },\n                  }}\n                >\n                  <VCardAvatar>\n                    { slots.prepend ? slots.prepend() : (<VAvatar />) }\n                  </VCardAvatar>\n                </VDefaultsProvider>\n              ) }\n\n              { hasHeaderText && (\n                <VCardHeaderText>\n                  { hasTitle && (\n                    <VCardTitle>\n                      { slots.title ? slots.title() : props.title}\n                    </VCardTitle>\n                  ) }\n\n                  { hasSubtitle && (\n                    <VCardSubtitle>\n                      { slots.subtitle ? slots.subtitle() : props.subtitle }\n                    </VCardSubtitle>\n                  ) }\n\n                  { slots.headerText?.() }\n                </VCardHeaderText>\n              ) }\n\n              { hasAppend && (\n                <VDefaultsProvider\n                  defaults={{\n                    VAvatar: {\n                      density: props.density,\n                      icon: props.appendIcon,\n                      image: props.appendAvatar,\n                    },\n                  }}\n                >\n                  <VCardAvatar>\n                    { slots.append ? slots.append() : (<VAvatar />) }\n                  </VCardAvatar>\n                </VDefaultsProvider>\n              ) }\n            </VCardHeader>\n          ) }\n\n          { hasText && (\n            <VCardText>\n              { slots.text ? slots.text() : props.text }\n            </VCardText>\n          ) }\n\n          { slots.content && (\n            <VCardContent v-slots={{ default: slots.content }} />\n          ) }\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VCardActions v-slots={{ default: slots.actions }} />\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VCard = InstanceType<typeof VCard>\n"]},"metadata":{},"sourceType":"module"}