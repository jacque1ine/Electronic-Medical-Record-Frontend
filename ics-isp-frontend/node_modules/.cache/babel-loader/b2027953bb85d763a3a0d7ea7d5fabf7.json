{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n\nconst allowedDensities = [null, 'default', 'comfortable', 'compact']; // Composables\n\nexport const makeDensityProps = propsFactory({\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  }\n}, 'density');\nexport function useDensity(props) {\n  let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  const densityClasses = computed(() => {\n    return `${name}--density-${props.density}`;\n  });\n  return {\n    densityClasses\n  };\n}","map":{"version":3,"mappings":";AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;SACSC,wBAAwBC,oB,qBAEjC;;AAGA,MAAMC,gBAAgB,GAAG,CAAC,IAAD,EAAO,SAAP,EAAkB,aAAlB,EAAiC,SAAjC,CAAzB,C,CAQA;;AACA,OAAO,MAAMC,gBAAgB,GAAGF,YAAY,CAAC;EAC3CG,OAAO,EAAE;IACPC,IAAI,EAAEC,MADC;IAEPC,OAAO,EAAE,SAFF;IAGPC,SAAS,EAAGC,CAAD,IAAYP,gBAAgB,CAACQ,QAAjBR,CAA0BO,CAA1BP;EAHhB;AADkC,CAAD,EAMzC,SANyC,CAArC;AAQP,OAAO,SAASS,UAAT,CACLC,KADK,EAGL;EAAA,IADAC,IACA,uEADOb,sBAAsB,EAC7B;EACA,MAAMc,cAAc,GAAGf,QAAQ,CAAC,MAAM;IACpC,OAAQ,GAAEc,IAAK,aAAYD,KAAK,CAACR,OAAQ,EAAzC;EAD6B,EAA/B;EAIA,OAAO;IAAEU;EAAF,CAAP;AACD","names":["computed","getCurrentInstanceName","propsFactory","allowedDensities","makeDensityProps","density","type","String","default","validator","v","includes","useDensity","props","name","densityClasses"],"sources":["../../src/composables/density.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'default', 'comfortable', 'compact'] as const\n\nexport type Density = typeof allowedDensities[number]\n\nexport interface DensityProps {\n  density?: Density\n}\n\n// Composables\nexport const makeDensityProps = propsFactory({\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n}, 'density')\n\nexport function useDensity (\n  props: DensityProps,\n  name = getCurrentInstanceName(),\n) {\n  const densityClasses = computed(() => {\n    return `${name}--density-${props.density}`\n  })\n\n  return { densityClasses }\n}\n"]},"metadata":{},"sourceType":"module"}